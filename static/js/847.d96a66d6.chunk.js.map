{"version":3,"file":"static/js/847.d96a66d6.chunk.js","mappings":"uMA0DA,UApDqB,WAAO,IAAD,IACvB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAS7C,IAPAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,8CAAoGQ,MAChG,SAAAC,GAAQ,OAAIV,EAASU,EAASC,KAAtB,IACVC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAChB,GAAE,CAACZ,IAGCF,EAAL,CAIA,IAAsBiB,EAIdC,EAAqElB,EAArEkB,MAAOC,EAA8DnB,EAA9DmB,aAAcC,EAAgDpB,EAAhDoB,aAAcC,EAAkCrB,EAAlCqB,SAAUC,EAAwBtB,EAAxBsB,OAAQC,EAAgBvB,EAAhBuB,YAEvDC,EAAYF,EAAOG,KAAI,SAAAC,GAAK,OAAI,SAAC,KAAD,UAA4BA,EAAMC,MAAjBD,EAAME,GAA3B,IAE5BC,EAAO,IAAIC,KAAKX,GAGtB,OACI,iCACA,SAAC,KAAD,CAAYY,KAAK,SAAjB,UAA0B,SAAC,KAAD,CAAUzB,MAAO,CAAEC,KAAMH,GAAgB4B,GAAI,IAA7C,qBAC1B,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAaC,QAAQ,OAAOC,KAhBlBjB,EAgBoCM,EAfhD,sDAAN,OAA6DN,IAeOkB,IAAKjB,OAErE,4BACI,UAAC,KAAD,WAAQA,EAAR,IAAgBW,EAAKO,kBACrB,UAAC,KAAD,yBAAmBC,OAAOC,SAAwB,IAAflB,EAAqB,IAAxD,QACA,SAAC,KAAD,wBACA,SAAC,KAAD,UAAWC,KACX,SAAC,KAAD,sBACA,SAAC,KAAD,UAAaG,KACb,SAAC,KAAD,sCACA,SAAC,KAAD,CAAUQ,GAAE,kBAAa9B,EAAb,SAAZ,mBACA,SAAC,KAAD,CAAa8B,GAAE,kBAAa9B,EAAb,YAAf,sBACA,SAAC,KAAD,YA9BX,CAmCJ,C","sources":["pages/MovieDetails.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {MovieContainer, MoviePoster, Score, Title, OverviewTitle, Overview, GenresTitle,\n    GenresList, AdditionalInfo, GenresItem, CastLink, ReviewsLink, ButtonBack, LinkBack} from \"components/App.styled\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    \n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=542013762b3531b404b15130444dfd0b`).then(\n            response => setMovie(response.data)\n        ).catch(error => console.log(error));\n    }, [movieId]);\n\n    \n    if (!movie) {\n        return;\n    };\n\n    const getPosterURL = (posterPath) => {\n        return `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${posterPath}`\n    };\n\n    const { title, release_date, vote_average, overview, genres, poster_path } = movie;\n\n    const allGenres = genres.map(genre => <GenresItem key={genre.id}>{genre.name}</GenresItem>);\n    \n    const date = new Date(release_date);\n    \n\n    return (\n        <>\n        <ButtonBack type=\"button\"><LinkBack state={{ from: backLinkHref }} to={\"/\"}>Back</LinkBack></ButtonBack>\n        <MovieContainer>\n            <div>\n                <MoviePoster loading=\"lazy\" src={getPosterURL(poster_path)} alt={title} />\n            </div>\n            <div>\n                <Title>{title} {date.getFullYear()}</Title>\n                <Score>User score {Number.parseInt(vote_average * 100 / 10)}%</Score>\n                <OverviewTitle>Overview</OverviewTitle>\n                <Overview>{overview}</Overview>\n                <GenresTitle>Genres</GenresTitle>\n                <GenresList>{allGenres}</GenresList>\n                <AdditionalInfo>Additional information</AdditionalInfo>\n                <CastLink to={`/movies/${movieId}/cast`}>Cast</CastLink>\n                <ReviewsLink to={`/movies/${movieId}/reviews`}>Reviews</ReviewsLink>\n                <Outlet />\n            </div>\n            </MovieContainer>\n            </>\n    );\n};\n\nexport default MovieDetails;"],"names":["useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","axios","then","response","data","catch","error","console","log","posterPath","title","release_date","vote_average","overview","genres","poster_path","allGenres","map","genre","name","id","date","Date","type","to","loading","src","alt","getFullYear","Number","parseInt"],"sourceRoot":""}